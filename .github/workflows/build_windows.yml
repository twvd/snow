name: Build - Windows

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
  pull_request:
    branches: [ "master" ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'

env:
  CARGO_TERM_COLOR: always
  # Workaround for 'the SSL certificate is invalid; class=Ssl (16)'
  CARGO_NET_GIT_FETCH_WITH_CLI: true

jobs:
  build:
    runs-on: windows-2022
    defaults:
      run:
        shell: msys2 {0}

    strategy:
      matrix:
        environment:
          - msystem: MINGW64
            prefix: mingw-w64-x86_64

    steps:
    - uses: actions/checkout@v4
    - name: Prepare MSYS2 environment
      uses: msys2/setup-msys2@v2
      id: msys2
      with:
        release: false
        update: true
        msystem: ${{ matrix.environment.msystem }}
        # Workaround for 'the SSL certificate is invalid; class=Ssl (16)'
        install: >-
          git
        pacboy: >-
          rust:p
          SDL2:p
          pkg-config:p
    - name: Build release
      run: cargo build --verbose --release --all
    - name: TUI Create packaging directory
      run: mkdir snow-tui
    - name: TUI Gather files
      run: cp 'target/release/snow_frontend_tui.exe' '${{ steps.msys2.outputs.msys2-location }}/mingw64/bin/SDL2.dll' snow-tui/
    - name: TUI Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: 'Snow Windows TUI (x86_64)'
        if-no-files-found: error
        path: snow-tui/*
    - name: GUI Create packaging directory
      run: mkdir snow-gui
    - name: GUI Gather files
      run: cp 'target/release/snow_frontend_egui.exe' snow-gui/Snow.exe
    - name: GUI Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: 'Snow Windows (x86_64)'
        if-no-files-found: error
        path: snow-gui/*
